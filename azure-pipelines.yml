variables:
- group: signing
- name: 'BUILD_OUTPUT_DIR'
  value: 'app/build/outputs/apk'

jobs:
- job: Build_Debug

  pool:
    vmImage: 'macOS 10.13'

  steps:

  - task: Gradle@2
    inputs:
      gradleWrapperFile: 'gradlew'
      tasks: 'assembleDebug'
    displayName: 'Assemble Debug'

  - task: CopyFiles@2
    inputs:
      contents: '$(BUILD_OUTPUT_DIR)/**/*.apk'
      targetFolder: '$(Build.ArtifactStagingDirectory)'
    
  - task: PublishBuildArtifacts@1
    displayName: 'Publish'
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: '$(Build.BuildId).DebugBuilds'
      publishLocation: 'Container'

- job: Build_Release
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')

  pool:
    vmImage: 'macOS 10.13'

  steps:

  - task: Gradle@2
    inputs:
      gradleWrapperFile: 'gradlew'
      tasks: 'assembleFenixProduction'
      options: '-PversionName=1.0.$(Build.BuildNumber)'
    displayName: 'Assemble Release'

  - task: AndroidSigning@3
    inputs:
      apkFiles: '$(BUILD_OUTPUT_DIR)/**/*.apk'
      apksign: true
      apksignerKeystoreFile: 'sam-browser.keystore'
      apksignerKeystorePassword: '$(apksignerKeystorePassword)'
      apksignerKeystoreAlias: '$(apksignerKeystoreAlias)'
      apksignerKeyPassword: '$(apksignerKeyPassword)'
      zipalign: true

  - bash: |
      for f in $(BUILD_OUTPUT_DIR)/geckoBeta/fenixProduction/*.apk; do mv "$f" "${f/unsigned/signed}"; done
    displayName: 'Rename APKs'

  - task: CopyFiles@2
    inputs:
      contents: '$(BUILD_OUTPUT_DIR)/geckoBeta/fenixProduction/*.apk'
      targetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish'
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: '$(Build.BuildId).ReleaseBuilds'
      publishLocation: 'Container'
